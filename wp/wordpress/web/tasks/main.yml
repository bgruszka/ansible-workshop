---
- name: WEB | Add ondrej repository
  apt_repository:
    repo: ppa:ondrej/php
    state: present

- name: WEB | Install packages
  package: name={{ item }} state=present
  with_items:
    - nginx
    - php5.6
    - php5.6-mcrypt
    - php5.6-memcached
    - php5.6-dev
    - php5.6-cli
    - php5.6-intl
    - php5.6-curl
    - php5.6-imap
    - php5.6-ldap
    - php5.6-mysql
    - php5.6-fpm
    - php5.6-gd
    - php5.6-redis
    - nodejs
    - npm
    - ruby
    - ruby-dev
    - ruby-compass
    - git

- stat: path=/usr/lib/php5/20131226/amqp.so
  register: amqp_file


- name: WEB | Clone librabbitmq
  git:
    repo: https://github.com/alanxz/rabbitmq-c
    dest: /tmp/rabbitmq-c
    version: v0.5.2
    track_submodules: yes
  when: amqp_file.stat.exists == False

- name: WEB | Install librabbitmq
  command: "{{ item }} chdir=/tmp/rabbitmq-c"
  with_items:
    - autoreconf -i
    - ./configure
    - make
    - make install
  when: amqp_file.stat.exists == False

- name: WEB | Remove temporary rabbitmq-c directory
  command: rm -rf /tmp/rabbitmq-c
  when: amqp_file.stat.exists == False

- name: WEB | Pecl install amqp
  command: pecl install amqp
  args:
    creates: /usr/lib/php5/20131226/amqp.so
  when: amqp_file.stat.exists == False

- name: WEB | Add amqp extension ini file
  lineinfile: >
    line="extension=amqp.so"
    dest=/etc/php5/mods-available/amqp.ini
    state=present
    create=yes
  when: amqp_file.stat.exists == False

- name: WEB | Enable amqp extension
  command: php5enmod amqp
  notify:
    - restart php-fpm
  when: amqp_file.stat.exists == False

- name: WEB | Download composer
  get_url:
    url: https://getcomposer.org/composer.phar
    dest: /usr/bin/composer

- name: WEB | Set composer as executable
  file:
    path: /usr/bin/composer
    mode: "a+x"

- name: WEB | Download phpunit
  get_url:
    url: https://phar.phpunit.de/phpunit.phar
    dest: /usr/bin/phpunit

- name: WEB | Set phpunit as executable
  file:
    path: /usr/bin/phpunit
    mode: "a+x"

- name: WEB | Create ssl directory
  file:
    path: /etc/ssl/certs/blablacar
    state: directory

- name: WEB | Copy ssl key
  copy:
    src: "{{ item }}"
    dest: "/etc/ssl/certs/blablacar/{{ item }}"
  with_items:
    - nginx.key
    - nginx.pem

- name: WEB | Configure nginx vhost
  copy:
    src: v3.conf
    dest: /etc/nginx/sites-available

- name: WEB | Create symlink to v3
  file: src=/etc/nginx/sites-available/v3.conf dest=/etc/nginx/sites-enabled/v3.conf state=link
  notify:
    - restart nginx

- name: WEB | Create symlink nodejs -> node
  file: src=/usr/bin/nodejs dest=/usr/bin/node state=link

- name: WEB | Install npm packages
  npm:
    name: "{{ item }}"
    global: yes
  with_items:
    - grunt
    - grunt-cli

- name: WEB | Clone repository
  git:
    repo: ssh://git@git.priv.blablacar.net.:7999/bbcthree/comuto3.git
    dest: /space

- name: WEB | Install assets
  command: ./assets-install.sh
  args:
    chdir: /space

- name: WEB | Composer install
  command: composer install
  args:
    chdir: /space
